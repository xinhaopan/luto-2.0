{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "isInteractiveWindowMessageCell": true
   },
   "source": [
    "Connected to luto (Python 3.8.18)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import shutil\n",
    "import pandas as pd\n",
    "from glob import glob\n",
    "import argparse\n",
    "from tools.helper_func import add_data_2_html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "RAW_DATA_ROOT = r'N:\\LUF-Modelling\\LUTO2_JZ\\luto-2.0\\output\\2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "RAW_DATA_ROOT = os.path.abspath(RAW_DATA_ROOT)\n",
    "RAW_DATA_ROOT = os.path.normpath(RAW_DATA_ROOT).replace(\"\\\\\", \"/\")\n",
    "# Set the save directory    \n",
    "\n",
    "REPORT_DIR = f'{RAW_DATA_ROOT}/DATA_REPORT'\n",
    "if not os.path.exists(REPORT_DIR):\n",
    "    raise Exception(f\"Report directory not found: {REPORT_DIR}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[WinError 3] The system cannot find the path specified: 'luto/tools/report/tools/template_html'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "\u001b[1;32mn:\\LUF-Modelling\\LUTO2_JZ\\luto-2.0\\luto\\tools\\report\\create_html.py\u001b[0m in \u001b[0;36mline 1\n\u001b[1;32m----> <a href='file:///n%3A/LUF-Modelling/LUTO2_JZ/luto-2.0/luto/tools/report/create_html.py?line=38'>39</a>\u001b[0m shutil\u001b[39m.\u001b[39;49mcopytree(\u001b[39m'\u001b[39;49m\u001b[39mluto/tools/report/tools/template_html\u001b[39;49m\u001b[39m'\u001b[39;49m, \n\u001b[0;32m      <a href='file:///n%3A/LUF-Modelling/LUTO2_JZ/luto-2.0/luto/tools/report/create_html.py?line=39'>40</a>\u001b[0m                 \u001b[39mf\u001b[39;49m\u001b[39m'\u001b[39;49m\u001b[39m{\u001b[39;49;00mREPORT_DIR\u001b[39m}\u001b[39;49;00m\u001b[39m/REPORT_HTML\u001b[39;49m\u001b[39m'\u001b[39;49m,\n\u001b[0;32m      <a href='file:///n%3A/LUF-Modelling/LUTO2_JZ/luto-2.0/luto/tools/report/create_html.py?line=40'>41</a>\u001b[0m                 dirs_exist_ok\u001b[39m=\u001b[39;49m\u001b[39mTrue\u001b[39;49;00m)\n",
      "File \u001b[1;32mf:\\jinzhu\\conda_env\\luto\\lib\\shutil.py:555\u001b[0m, in \u001b[0;36mcopytree\u001b[1;34m(src, dst, symlinks, ignore, copy_function, ignore_dangling_symlinks, dirs_exist_ok)\u001b[0m\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=517'>518</a>\u001b[0m \u001b[39m\u001b[39m\u001b[39m\"\"\"Recursively copy a directory tree and return the destination directory.\u001b[39;00m\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=518'>519</a>\u001b[0m \n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=519'>520</a>\u001b[0m \u001b[39mdirs_exist_ok dictates whether to raise an exception in case dst or any\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=551'>552</a>\u001b[0m \n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=552'>553</a>\u001b[0m \u001b[39m\"\"\"\u001b[39;00m\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=553'>554</a>\u001b[0m sys\u001b[39m.\u001b[39maudit(\u001b[39m\"\u001b[39m\u001b[39mshutil.copytree\u001b[39m\u001b[39m\"\u001b[39m, src, dst)\n\u001b[1;32m--> <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=554'>555</a>\u001b[0m \u001b[39mwith\u001b[39;00m os\u001b[39m.\u001b[39;49mscandir(src) \u001b[39mas\u001b[39;00m itr:\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=555'>556</a>\u001b[0m     entries \u001b[39m=\u001b[39m \u001b[39mlist\u001b[39m(itr)\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=556'>557</a>\u001b[0m \u001b[39mreturn\u001b[39;00m _copytree(entries\u001b[39m=\u001b[39mentries, src\u001b[39m=\u001b[39msrc, dst\u001b[39m=\u001b[39mdst, symlinks\u001b[39m=\u001b[39msymlinks,\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=557'>558</a>\u001b[0m                  ignore\u001b[39m=\u001b[39mignore, copy_function\u001b[39m=\u001b[39mcopy_function,\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=558'>559</a>\u001b[0m                  ignore_dangling_symlinks\u001b[39m=\u001b[39mignore_dangling_symlinks,\n\u001b[0;32m    <a href='file:///f%3A/jinzhu/conda_env/luto/lib/shutil.py?line=559'>560</a>\u001b[0m                  dirs_exist_ok\u001b[39m=\u001b[39mdirs_exist_ok)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [WinError 3] The system cannot find the path specified: 'luto/tools/report/tools/template_html'"
     ]
    }
   ],
   "source": [
    "shutil.copytree('luto/tools/report/tools/template_html', \n",
    "                f'{REPORT_DIR}/REPORT_HTML',\n",
    "                dirs_exist_ok=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "if  __name__ == '__main__':\n",
    "    os.chdir('../../..')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "REPORT_DIR = f'{RAW_DATA_ROOT}/DATA_REPORT'\n",
    "if not os.path.exists(REPORT_DIR):\n",
    "    raise Exception(f\"Report directory not found: {REPORT_DIR}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "shutil.copytree('luto/tools/report/tools/template_html', \n",
    "                f'{REPORT_DIR}/REPORT_HTML',\n",
    "                dirs_exist_ok=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/production_profit.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/land-use_area.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/GHG_emissions.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/water_usage.html successfully!\n"
     ]
    }
   ],
   "source": [
    "html_df = pd.DataFrame([['production',f\"{REPORT_DIR}/REPORT_HTML/pages/production.html\"],\n",
    "                        [\"area\",f\"{REPORT_DIR}/REPORT_HTML/pages/land-use_area.html\"],\n",
    "                        [\"GHG\",f\"{REPORT_DIR}/REPORT_HTML/pages/GHG_emissions.html\"],\n",
    "                        [\"water\",f\"{REPORT_DIR}/REPORT_HTML/pages/water_usage.html\"]])\n",
    "\n",
    "html_df.columns = ['name','path']\n",
    "# Get all data files\n",
    "\n",
    "all_data_files = glob(f\"{REPORT_DIR}/data/*\")\n",
    "# Add data path to html_df\n",
    "\n",
    "html_df['data_path'] = html_df.apply(lambda x: [i for i in all_data_files if x['name'] in i ],axis=1)\n",
    "# Parse html files\n",
    "\n",
    "for idx,row in html_df.iterrows():\n",
    "    html_path = row['path']\n",
    "    data_pathes  = row['data_path']\n",
    "    # Add data to html\n",
    "    add_data_2_html(html_path,data_pathes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/production_profit.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/land-use_area.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/GHG_emissions.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/water_usage.html successfully!\n"
     ]
    }
   ],
   "source": [
    "shutil.copytree('luto/tools/report/tools/template_html', \n",
    "                f'{REPORT_DIR}/REPORT_HTML',\n",
    "                dirs_exist_ok=True)\n",
    "####################################################\n",
    "#                Write data to HTML                #\n",
    "####################################################  \n",
    "# Get all html files needs data insertion\n",
    "\n",
    "html_df = pd.DataFrame([['production',f\"{REPORT_DIR}/REPORT_HTML/pages/production.html\"],\n",
    "                        [\"area\",f\"{REPORT_DIR}/REPORT_HTML/pages/land-use_area.html\"],\n",
    "                        [\"GHG\",f\"{REPORT_DIR}/REPORT_HTML/pages/GHG_emissions.html\"],\n",
    "                        [\"water\",f\"{REPORT_DIR}/REPORT_HTML/pages/water_usage.html\"]])\n",
    "\n",
    "html_df.columns = ['name','path']\n",
    "# Get all data files\n",
    "\n",
    "all_data_files = glob(f\"{REPORT_DIR}/data/*\")\n",
    "# Add data path to html_df\n",
    "\n",
    "html_df['data_path'] = html_df.apply(lambda x: [i for i in all_data_files if x['name'] in i ],axis=1)\n",
    "# Parse html files\n",
    "\n",
    "for idx,row in html_df.iterrows():\n",
    "    html_path = row['path']\n",
    "    data_pathes  = row['data_path']\n",
    "    # Add data to html\n",
    "    add_data_2_html(html_path,data_pathes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/production_profit.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/land-use_area.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/GHG_emissions.html successfully!\n",
      "Data added to N:/LUF-Modelling/LUTO2_JZ/luto-2.0/output/2024_01_23__15_52_25_hard_mincost_RF30_P1e5_2010-2015_timeseries_81Mt/DATA_REPORT/REPORT_HTML/pages/water_usage.html successfully!\n"
     ]
    }
   ],
   "source": [
    "shutil.copytree('luto/tools/report/tools/template_html', \n",
    "                f'{REPORT_DIR}/REPORT_HTML',\n",
    "                dirs_exist_ok=True)\n",
    "####################################################\n",
    "#                Write data to HTML                #\n",
    "####################################################  \n",
    "# Get all html files needs data insertion\n",
    "\n",
    "html_df = pd.DataFrame([['production',f\"{REPORT_DIR}/REPORT_HTML/pages/production.html\"],\n",
    "                        [\"area\",f\"{REPORT_DIR}/REPORT_HTML/pages/land-use_area.html\"],\n",
    "                        [\"GHG\",f\"{REPORT_DIR}/REPORT_HTML/pages/GHG_emissions.html\"],\n",
    "                        [\"water\",f\"{REPORT_DIR}/REPORT_HTML/pages/water_usage.html\"]])\n",
    "\n",
    "html_df.columns = ['name','path']\n",
    "# Get all data files\n",
    "\n",
    "all_data_files = glob(f\"{REPORT_DIR}/data/*\")\n",
    "# Add data path to html_df\n",
    "\n",
    "html_df['data_path'] = html_df.apply(lambda x: [i for i in all_data_files if x['name'] in i ],axis=1)\n",
    "# Parse html files\n",
    "\n",
    "for idx,row in html_df.iterrows():\n",
    "    html_path = row['path']\n",
    "    data_pathes  = row['data_path']\n",
    "    # Add data to html\n",
    "    add_data_2_html(html_path,data_pathes)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
